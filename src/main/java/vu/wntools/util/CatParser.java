package vu.wntools.util;

import eu.kyotoproject.kaf.KafTerm;
import eu.kyotoproject.kaf.KafWordForm;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.helpers.DefaultHandler;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import java.io.FileReader;
import java.util.ArrayList;

/**
 * Created by piek on 16/04/15.
 */
public class CatParser extends DefaultHandler {


        String value = "";
        KafWordForm kafWordForm;
        static public ArrayList<KafWordForm> kafWordFormArrayList;
        KafTerm kafTerm;
        static public ArrayList<KafTerm> kafTermArrayList;
        ArrayList<String> spans;
        String span = "";
        String target = "";
        boolean REFERSTO = false;

        void init() {
            value = "";
            kafWordForm = new KafWordForm();
            kafWordFormArrayList = new ArrayList<KafWordForm>();
            kafTerm = new KafTerm();
            kafTermArrayList = new ArrayList<KafTerm>();
            REFERSTO = false;
            target = "";
        }

        public void parseFile(String filePath) {
            String myerror = "";
            init();
            try {
                SAXParserFactory factory = SAXParserFactory.newInstance();
                factory.setValidating(false);
                SAXParser parser = factory.newSAXParser();
                InputSource inp = new InputSource (new FileReader(filePath));
                parser.parse(inp, this);
            } catch (SAXParseException err) {
                myerror = "\n** Parsing error" + ", line " + err.getLineNumber()
                        + ", uri " + err.getSystemId();
                myerror += "\n" + err.getMessage();
                System.out.println("myerror = " + myerror);
            } catch (SAXException e) {
                Exception x = e;
                if (e.getException() != null)
                    x = e.getException();
                myerror += "\nSAXException --" + x.getMessage();
                System.out.println("myerror = " + myerror);
            } catch (Exception eee) {
                eee.printStackTrace();
                myerror += "\nException --" + eee.getMessage();
                System.out.println("myerror = " + myerror);
            }
            //System.out.println("myerror = " + myerror);
        }//--c



        public void startElement(String uri, String localName,
                                 String qName, Attributes attributes)
                throws SAXException {

            if (qName.equalsIgnoreCase("token")) {
                kafWordForm = new KafWordForm();
                kafWordForm.setWid(attributes.getValue("t_id"));
                Integer sentenceInt = Integer.parseInt(attributes.getValue("sentence"));
                /// HACK TO MAKE SENTENCE ID EQUAL TO SENTENCE ID OF WIKINEWS NAF GENERATED BY FBK
                sentenceInt++;
                kafWordForm.setSent(sentenceInt.toString());
            }
            else if (qName.equalsIgnoreCase("token_anchor")) {
                span = attributes.getValue("t_id");
                kafTerm.addSpans(span);
            }
            value = "";
        }//--startElement


        public void endElement(String uri, String localName, String qName)
                throws SAXException {
            if (qName.equalsIgnoreCase("token")) {
                kafWordForm.setWf(value.trim());
                kafWordFormArrayList.add(kafWordForm);
                kafWordForm = new KafWordForm();
            }
        }




        public void characters(char ch[], int start, int length)
                throws SAXException {
            value += new String(ch, start, length);
            // System.out.println("tagValue:"+value);
        }

}
